// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"github.com/edgarmueller/go-api-journal/internal/domain"
	"time"
)

func Journal(journalEntries []domain.JournalEntry) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Go Journal</title><!-- Tailwind CSS --><link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\"><script src=\"https://unpkg.com/htmx.org@1.9.2\"></script><style>\n        .fade-in {\n            opacity: 0;\n            transition: opacity 0.5s ease-in-out;\n        }\n        .fade-in.show {\n            opacity: 1;\n        }\n\t\t\t\t</style></head><body id=\"body\"><div class=\"max-w-6xl mx-auto p-5 bg-white\"><div id=\"notification\" class=\"fade-in hidden bg-green-500 text-white font-bold px-4 py-3 rounded relative mt-2\">Journal updated</div><div class=\"flex justify-end mb-4\"><button hx-post=\"logout\" hx-target=\"body\" hx-swap=\"innerHTML\" class=\"bg-black text-white font-semibold py-2 px-4 rounded hover:bg-gray-800 transition duration-300\">Logout</button></div><h1 class=\"text-2xl font-bold mb-5 text-center text-black\">My Journal</h1><form action=\"journal\" hx-post=\"journal\" hx-include=\"find input\" hx-target=\"#body\" hx-swap=\"innerHTML\" class=\"space-y-4\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Entry(&domain.JournalEntry{
			Date: time.Now(),
		}, true).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</form><!-- Journal Entries Section --><div class=\"mt-5\"><!-- Assuming journalEntries are rendered here -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, entry := range journalEntries {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<form action=\"journal\" hx-put=\"journal\" hx-include=\"find input\" hx-target=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("#entry-%d", entry.ID))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/adapters/controllers/presentation/templates/journal.templ`, Line: 65, Col: 53}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" hx-swap=\"outerHTML\" class=\"w-full mx-auto bg-white entry-form\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = Entry(&entry, false).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</form>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div><script>\n\t        document.body.addEventListener('htmx:afterSwap', function (event) {\n            if (event.detail.target.id.includes('entry-')) {\n\t\t\t\t\t\t\t\tconsole.log(\"Event: \", event);\n                const notification = document.getElementById('notification');\n                notification.classList.remove('hidden');\n                notification.classList.add('show'); // Show the notification\n                setTimeout(function() {\n                    notification.classList.remove('show'); // Hide after 3 seconds\n                    notification.classList.add('hidden'); // Add hidden class\n                }, 3000);\n            }\n        });\n    </script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
